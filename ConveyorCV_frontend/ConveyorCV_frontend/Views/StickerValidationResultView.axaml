<UserControl
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:ConveyorCV_frontend.ViewModels"
    xmlns:paz="using:Avalonia.Controls.PanAndZoom"
	xmlns:converters="clr-namespace:ConveyorCV_frontend.Converters;assembly=ConveyorCV_frontend"
    mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
    x:Class="ConveyorCV_frontend.Views.StickerValidationResultView"
    x:DataType="vm:StickerValidationResultViewModel">
    <UserControl.Resources>
        <converters:BoolToValueConverter
            x:Key="StickerPresentTextConverter"
            TrueValue="Наклейка присутствует"
            FalseValue="Наклейка отсутствует"/>
        <converters:BoolToValueConverter
            x:Key="StickerMatchesDesignTextConverter"
            TrueValue="Макет верный"
            FalseValue="Макет неверный"/>
        <converters:BoolToValueConverter
            x:Key="BoolToColorConverter"
            TrueValue="#00cc00"
            FalseValue="Red"/>
		<converters:StickerParametersToYConverter
			x:Key="StickerParametersToYConverter"/>
		<converters:StickerParametersToXConverter
			x:Key="StickerParametersToXConverter"/>
    </UserControl.Resources>
	<UserControl.Styles>
		<Style Selector="Run.secondary">
			<Setter Property="FontSize" Value="16"/>
		</Style>
		<Style Selector="TextBlock.secondary">
			<Setter Property="FontSize" Value="16"/>
		</Style>
	</UserControl.Styles>
    <Design.DataContext>
        <vm:StickerValidationResultViewModel/>
    </Design.DataContext>

	<Panel>
		<TextBlock
			IsVisible="{Binding LastResult, Converter={x:Static ObjectConverters.IsNull}}"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
			FontSize="20"
			Text="Ожидание обнаружений..."/>
		<Panel
			IsVisible="{Binding LastResult, Converter={x:Static ObjectConverters.IsNotNull}}">	
			<paz:ZoomBorder
				Name="ZoomBorder"
				Stretch="None"
				ZoomSpeed="1.2"
				ClipToBounds="True"
				Focusable="True"
				VerticalAlignment="Stretch"
				HorizontalAlignment="Stretch">
				<Border
					x:Name="AccBorder"
					Margin="50"
					Grid.Row="1"
					Grid.Column="1"
					Width="{Binding Image.Size.Width}"
					Height="{Binding Image.Size.Height}"
					BorderThickness="2"
					BorderBrush="Black"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch">
				
					<Panel>
						<Image
							Source="{Binding Image}"
							Stretch="Uniform"/>

						<!-- Sticker Outline -->
						<Border
							Width="{Binding StickerSize.Width}"
							Height="{Binding StickerSize.Height}"
							BorderThickness="3"
							BorderBrush="{Binding StickerPresent, Converter={StaticResource BoolToColorConverter}}"
							HorizontalAlignment="Left"
							VerticalAlignment="Top">
							<Border.RenderTransform>
								<TransformGroup>
									<RotateTransform
										Angle="{Binding Rotation}"/>
									<TranslateTransform>
										<TranslateTransform.X>
											<MultiBinding Converter="{StaticResource StickerParametersToXConverter}">
												<Binding Path="StickerLocation.X"/>
												<Binding Path="StickerSize"/>
											</MultiBinding>
										</TranslateTransform.X>
										<TranslateTransform.Y>
											<MultiBinding Converter="{StaticResource StickerParametersToYConverter}">
												<Binding Path="StickerLocation.Y"/>
												<Binding Path="StickerSize"/>
											</MultiBinding>
										</TranslateTransform.Y>
									</TranslateTransform>
								</TransformGroup>
							</Border.RenderTransform>
						</Border>

						<Canvas>
							<Ellipse
								Width="10"
								Height="10"
								Fill="{Binding StickerPresent, Converter={StaticResource BoolToColorConverter}}"
								Canvas.Left="{Binding StickerLocation.X}"
								Canvas.Top="{Binding StickerLocation.Y}"
								Margin="-5,-5,0,0"/>
						</Canvas>
					</Panel>
				</Border>

			</paz:ZoomBorder>

			<Expander
				ZIndex="3"
				IsExpanded="True"
				VerticalAlignment="Top"
				HorizontalAlignment="Left"
				Classes="container">
				<Expander.Header>
					<TextBlock
						Grid.Column="0"
						VerticalAlignment="Center"
						HorizontalAlignment="Left"
						FontSize="20"
						Text="Результат обнаружения"/>
				</Expander.Header>
				<StackPanel
					Spacing="10">
					<Border
						Background="{Binding StickerPresent, Converter={StaticResource BoolToColorConverter}}"
						CornerRadius="3"
						Padding="5">
						<TextBlock
							FontSize="20"
							TextAlignment="Center"
							Foreground="White"
							Text="{Binding StickerPresent, Converter={StaticResource StickerPresentTextConverter}}"/>
					</Border>

					<!-- Sticker Design Match - only visible when sticker is present -->
					<Border
						IsVisible="{Binding StickerPresent}"
						Background="{Binding StickerMatchesDesign, Converter={StaticResource BoolToColorConverter}}"
						CornerRadius="3"
						Padding="5">
						<TextBlock
							FontSize="20"
							TextAlignment="Center"
							Foreground="White"
							Text="{Binding StickerMatchesDesign, Converter={StaticResource StickerMatchesDesignTextConverter}}"/>
					</Border>

					<!--<TextBlock Text="{Binding StickerSize.Width, StringFormat='Ширина наклейки: {0:F1}'}" />-->
					<TextBlock
						Classes="secondary"
						IsVisible="{Binding StickerPresent}">
						<Run Text="Поворот наклейки: "/>
						<Run Text="{Binding Rotation, StringFormat={}{0:0.0}°}"/>
					</TextBlock>
					<Separator/>
					<TextBlock
						Classes="secondary">
						<Run Text="Порядковый номер аккумулятора: "/>
						<Run Text="{Binding SeqNumber}"/>
					</TextBlock>
					<TextBlock
						Classes="secondary">
						<Run Text="Время обнаружения: "/>
						<Run Text="{Binding Timestamp, StringFormat='HH:mm:ss'}"/>
					</TextBlock>
				</StackPanel>
			</Expander>
		</Panel>
	</Panel>
</UserControl>